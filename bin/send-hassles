#!/usr/bin/perl -w
#
# send-hassles:
# Actually send hassles out.
#
# Copyright (c) 2005 Chris Lightfoot. All rights reserved.
# Email: chris@ex-parrot.com; WWW: http://www.ex-parrot.com/~chris/
#

use strict;

use FindBin;
use lib "$FindBin::Bin/../perllib";
use lib "$FindBin::Bin/../commonlib/perllib";

use DBI;
use DBD::Pg;
use Digest::SHA qw(sha1_hex);
use IO::Pipe;
use Getopt::Long;

use Hassle;# qw(dbh secret);
use mySociety::Config;

BEGIN {
    mySociety::Config::set_file("$FindBin::Bin/../conf/general");
}   

our $verbose = 0; 
our $help;

sub help {
print <<END

Usage: send-hassles [OPTION]

Options are
    --verbose=n   Choose 0 (no output), 1 (debugging output)

END
}

if (!GetOptions(
        'verbose=i' =>  \$verbose,
        'help' =>               \$help,
    )) {
    help();
    exit(1);
}
if ($help) {
    help();
    exit(0);
}

sub debug (@);
if ($verbose > 0) {
    eval 'sub debug (@) { print STDERR @_; }';
} else {
    eval 'sub debug (@) { }';
}

debug "running on " . mySociety::Config::get('NHASSLEDAYS') . " days per week\n";
debug "running " . mySociety::Config::get('NHASSLERUNS') . " times per day\n";

# Iterate over all hassles.
my $s = active_hassles();
while (my ($hassle_id, $what, $freq, $when, $count) = $s->fetchrow_array()) {
    debug "hassle #$hassle_id '$what' every $freq days; $count recips\n";

    #
    # The probability of sending a hassle is chosen so that the mean number of
    # hassles is one every frequency days (i.e., "frequency" is actually a
    # period...).
    #

    my $P = 7 / ($freq * mySociety::Config::get('NHASSLERUNS') * mySociety::Config::get('NHASSLEDAYS'));
    debug "  P = $P\n";

    next if (rand() > $P);


    # Pick a victim.
    my ($id, $email) = dbh()->selectrow_array('
                    select id, email from recipient
                    where confirmed and not deleted and hassle_id = ?
                    order by random()
                    limit 1', {},
                    $hassle_id);
    next unless $id;

    debug "  victim = #$id $email\n";

    my $cancelurl = mySociety::Config::get('WEBURL') . "/U/" . token($id);

    my $text = <<EOF;
Hi,

This is a hassle to remind you to $what. So get to it!

 - - - - - - - 

If HassleMe helps you live a slightly happier life, *please donate* to show your appreciation.

http://www.mysociety.org/donate

HassleMe is run by a small non-profit called mySociety.org - check us out if you want to know more.

 - - - - - - - 

EOF

    my $howoften = ($freq == 1
                        ? 'roughly every day'
                        : "roughly every $freq days");

    if ($count == 1) {
        $text .= <<EOF
You'll be sent one of these hassles $howoften.
EOF
    } else {
        $text .= <<EOF
One of you will be sent one of these hassles $howoften.
EOF
    }

    $text .= <<EOF;

Unsubscribe:  $cancelurl

EOF

    # XXX Wrap it.

    my $subject = "Don't forget to... $what";
    my $max_len = 50;
    if (length($subject) > $max_len) {
	    $subject = substr($subject,0,$max_len-3) . '...';
	}
    sendmail($email, $subject, $text);

}
